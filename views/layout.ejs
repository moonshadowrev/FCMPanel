<!DOCTYPE html>
<html lang="en" data-bs-theme="dark">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="description" content="FCM Dashboard - Modern Firebase Cloud Messaging management platform">
  <meta name="keywords" content="FCM, Firebase, Cloud Messaging, Push Notifications, Dashboard">
  <meta name="author" content="FCM Dashboard">
  <meta name="robots" content="noindex, nofollow">
  <meta http-equiv="X-Content-Type-Options" content="nosniff">
  <meta http-equiv="X-XSS-Protection" content="1; mode=block">
  <meta name="referrer" content="strict-origin-when-cross-origin">
  
  <title>FCM Dashboard | <%= typeof title !== 'undefined' ? title : 'Firebase Cloud Messaging Dashboard' %></title>
  
  <!-- Preconnect to external domains for performance -->
  <link rel="preconnect" href="https://cdn.jsdelivr.net" crossorigin>
  <link rel="preconnect" href="https://cdnjs.cloudflare.com" crossorigin>
  <link rel="preconnect" href="https://fonts.googleapis.com" crossorigin>
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  
  <!-- Bootstrap CSS with integrity check -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" 
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
  
  <!-- Font Awesome Icons with integrity check -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" 
        integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw==" crossorigin="anonymous">
  
  <!-- DataTables CSS -->
  <link rel="stylesheet" href="https://cdn.datatables.net/1.13.4/css/dataTables.bootstrap5.min.css" crossorigin="anonymous">
  
  <!-- Google Fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  
  <!-- Custom CSS -->
  <link rel="stylesheet" href="/css/style.css">
  
  <!-- Favicon and app icons -->
  <link rel="icon" type="image/x-icon" href="/favicon.ico">
  <meta name="theme-color" content="#4361ee">
</head>
<body>
  <!-- Skip Links for Accessibility -->
  <a href="#main-content" class="skip-link">Skip to main content</a>
  <a href="#navigation" class="skip-link">Skip to navigation</a>

  <% if (typeof isAuthPage === 'undefined' || !isAuthPage) { %>
  <!-- Main Navigation -->
  <nav class="navbar navbar-expand-lg" id="navigation" role="navigation" aria-label="Main navigation">
    <div class="container">
      <a class="navbar-brand" href="/" aria-label="FCM Dashboard Home">
        <i class="fas fa-bell me-2" aria-hidden="true"></i>
        <span>FCM Dashboard</span>
      </a>
      
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
              aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation menu">
        <span class="navbar-toggler-icon"></span>
      </button>
      
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav" role="menubar">
          <li class="nav-item" role="none">
            <a class="nav-link <%= activeTab === 'home' ? 'active' : '' %>" href="/" role="menuitem"
               aria-label="Dashboard Home" <%= activeTab === 'home' ? 'aria-current="page"' : '' %>>
              <i class="fas fa-home me-1" aria-hidden="true"></i> 
              <span>Home</span>
            </a>
          </li>
          <li class="nav-item" role="none">
            <a class="nav-link <%= activeTab === 'notifications' ? 'active' : '' %>" href="/notifications" role="menuitem"
               aria-label="Send Notifications" <%= activeTab === 'notifications' ? 'aria-current="page"' : '' %>>
              <i class="fas fa-paper-plane me-1" aria-hidden="true"></i> 
              <span>Notifications</span>
            </a>
          </li>
          <li class="nav-item" role="none">
            <a class="nav-link <%= activeTab === 'topics' ? 'active' : '' %>" href="/topics" role="menuitem"
               aria-label="Manage Topics" <%= activeTab === 'topics' ? 'aria-current="page"' : '' %>>
              <i class="fas fa-tags me-1" aria-hidden="true"></i> 
              <span>Topics</span>
            </a>
          </li>
          <li class="nav-item" role="none">
            <a class="nav-link <%= activeTab === 'devices' ? 'active' : '' %>" href="/devices" role="menuitem"
               aria-label="Manage Devices" <%= activeTab === 'devices' ? 'aria-current="page"' : '' %>>
              <i class="fas fa-mobile-alt me-1" aria-hidden="true"></i> 
              <span>Devices</span>
            </a>
          </li>
          <li class="nav-item" role="none">
            <a class="nav-link <%= activeTab === 'accounts' ? 'active' : '' %>" href="/accounts" role="menuitem"
               aria-label="Firebase Accounts" <%= activeTab === 'accounts' ? 'aria-current="page"' : '' %>>
              <i class="fas fa-key me-1" aria-hidden="true"></i> 
              <span>Firebase Accounts</span>
            </a>
          </li>
        </ul>
        
        <!-- User Account Dropdown -->
        <% if (typeof user !== 'undefined' && user) { %>
        <ul class="navbar-nav ms-auto">
          <li class="nav-item dropdown" role="none">
            <a class="nav-link dropdown-toggle" href="#" id="userDropdown" role="button" 
               data-bs-toggle="dropdown" aria-expanded="false" aria-haspopup="true"
               aria-label="User menu for <%= user.username %>">
              <i class="fas fa-user-circle me-1" aria-hidden="true"></i> 
              <span><%= user.username %></span>
            </a>
            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown" role="menu">
              <li role="none">
                <a class="dropdown-item" href="/auth/profile" role="menuitem">
                  <i class="fas fa-id-card me-2" aria-hidden="true"></i> 
                  <span>Profile</span>
                </a>
              </li>
              <% if (user.isAdmin) { %>
              <li role="none">
                <a class="dropdown-item" href="/auth/users" role="menuitem">
                  <i class="fas fa-users-cog me-2" aria-hidden="true"></i> 
                  <span>User Management</span>
                </a>
              </li>
              <% } %>
              <li role="none"><hr class="dropdown-divider"></li>
              <li role="none">
                <form action="/auth/logout" method="POST" id="logout-form" class="d-inline">
                  <input type="hidden" name="_csrf" value="<%= typeof csrfToken !== 'undefined' ? csrfToken : '' %>">
                  <button type="submit" class="dropdown-item text-danger" role="menuitem"
                          aria-label="Logout from FCM Dashboard">
                    <i class="fas fa-sign-out-alt me-2" aria-hidden="true"></i> 
                    <span>Logout</span>
                  </button>
                </form>
              </li>
            </ul>
          </li>
        </ul>
        <% } %>
      </div>
    </div>
  </nav>
  <% } %>

  <!-- Main Content Area -->
  <main class="container mt-4" id="main-content" role="main">
    <!-- Flash Messages with Enhanced Accessibility -->
    <div class="flash-messages" role="region" aria-label="Status messages">
      <% if(typeof success_msg != 'undefined' && success_msg && success_msg !== '') { %>
      <div class="alert alert-success alert-dismissible fade show" role="alert" aria-live="polite">
        <i class="fas fa-check-circle me-2" aria-hidden="true"></i>
        <span class="sr-only">Success:</span>
        <%= success_msg %>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close success message"></button>
      </div>
      <% } %>

      <% if(typeof error_msg != 'undefined' && error_msg && error_msg !== '') { %>
      <div class="alert alert-danger alert-dismissible fade show" role="alert" aria-live="assertive">
        <i class="fas fa-exclamation-circle me-2" aria-hidden="true"></i>
        <span class="sr-only">Error:</span>
        <%= error_msg %>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close error message"></button>
      </div>
      <% } %>

      <% if(typeof info_msg != 'undefined' && info_msg && info_msg !== '') { %>
      <div class="alert alert-info alert-dismissible fade show" role="alert" aria-live="polite">
        <i class="fas fa-info-circle me-2" aria-hidden="true"></i>
        <span class="sr-only">Information:</span>
        <%= info_msg %>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close info message"></button>
      </div>
      <% } %>
    </div>

    <!-- Page Content -->
    <%- body %>
  </main>

  <!-- Footer -->
  <footer class="mt-5" role="contentinfo">
    <div class="container text-center">
      <p class="mb-0">
        <small>&copy; <%= new Date().getFullYear() %> FCM Dashboard. Built with ❤️ for <a href="https://github.com/moonshadowrev/FCMPanel" target="_blank" rel="noopener noreferrer" class="text-decoration-none">Firebase Cloud Messaging</a>.</small>
      </p>
    </div>
  </footer>

  <!-- Scripts -->
  <!-- jQuery -->
  <script src="https://code.jquery.com/jquery-3.7.0.min.js" crossorigin="anonymous"></script>
  
  <!-- Popper.js with integrity check -->
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js" 
          integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r" 
          crossorigin="anonymous"></script>
  
  <!-- Bootstrap JS with integrity check -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" 
          integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" 
          crossorigin="anonymous"></script>
  
  <!-- DataTables JS -->
  <script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js" crossorigin="anonymous"></script>
  <script src="https://cdn.datatables.net/1.13.4/js/dataTables.bootstrap5.min.js" crossorigin="anonymous"></script>
  
  <!-- Chart.js -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.js" crossorigin="anonymous"></script>
  
  <!-- Custom JS -->
  <script src="/js/main.js"></script>

  <!-- Enhanced JavaScript for UI Functionality -->
  <script>
    // Security: Set up CSP nonce if available
    <% if (typeof nonce !== 'undefined') { %>
    window.cspNonce = '<%= nonce %>';
    <% } %>

    // Enhanced DOM Content Loaded Handler
    document.addEventListener('DOMContentLoaded', function() {
      'use strict';
      
      // Initialize Bootstrap tooltips with accessibility
      const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
      tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl, {
          boundary: 'viewport',
          sanitize: true,
          trigger: 'hover focus'
        });
      });

      // Initialize Bootstrap dropdowns with enhanced accessibility
      const dropdownElementList = [].slice.call(document.querySelectorAll('.dropdown-toggle'));
      dropdownElementList.map(function (dropdownToggleEl) {
        return new bootstrap.Dropdown(dropdownToggleEl);
      });

      // Enhanced notification form target selection
      const handleNotificationTargetSelection = () => {
        const targetTypeRadios = document.querySelectorAll('input[name="targetType"]');
        const deviceSelection = document.getElementById('deviceSelection');
        const topicSelection = document.getElementById('topicSelection');
        
        if (targetTypeRadios.length > 0 && (deviceSelection || topicSelection)) {
          const updateSelections = () => {
            const selectedValue = document.querySelector('input[name="targetType"]:checked')?.value;
            
            if (deviceSelection) {
              deviceSelection.classList.toggle('d-none', selectedValue !== 'device');
              const deviceSelect = deviceSelection.querySelector('select');
              if (deviceSelect) {
                deviceSelect.required = selectedValue === 'device';
                if (selectedValue !== 'device') deviceSelect.value = '';
              }
            }
            
            if (topicSelection) {
              topicSelection.classList.toggle('d-none', selectedValue !== 'topic');
              const topicSelect = topicSelection.querySelector('select');
              if (topicSelect) {
                topicSelect.required = selectedValue === 'topic';
                if (selectedValue !== 'topic') topicSelect.value = '';
              }
            }
          };
          
          targetTypeRadios.forEach(radio => {
            radio.addEventListener('change', updateSelections);
          });
          
          updateSelections(); // Initial call
        }
      };

      // DataTables initialization moved to page-specific implementations
      // This prevents double initialization conflicts

      // Call initialization functions
      handleNotificationTargetSelection();

      // Initialize notification details modal if function exists
      if (typeof window.initNotificationDetailsModal === 'function') {
        window.initNotificationDetailsModal();
      }

      // Enhanced form validation with accessibility
      const validationForms = document.querySelectorAll('form[data-needs-validation]');
      validationForms.forEach(form => {
        form.addEventListener('submit', function(event) {
          if (!form.checkValidity()) {
            event.preventDefault();
            event.stopPropagation();
            
            // Focus on first invalid field
            const firstInvalid = form.querySelector(':invalid');
            if (firstInvalid) {
              firstInvalid.focus();
              firstInvalid.scrollIntoView({ behavior: 'smooth', block: 'center' });
            }
          }
          form.classList.add('was-validated');
        });
      });

      // Enhanced copy to clipboard functionality
      const initializeCopyButtons = () => {
        const copyButtons = document.querySelectorAll('[data-clipboard-target]');
        copyButtons.forEach(button => {
          button.addEventListener('click', async function(e) {
            e.preventDefault();
            const targetSelector = this.dataset.clipboardTarget;
            const target = document.querySelector(targetSelector);
            
            if (!target) return;
            
            const textToCopy = target.value || target.textContent || target.innerText;
            
            try {
              await navigator.clipboard.writeText(textToCopy);
              
              // Provide feedback
              const originalHTML = this.innerHTML;
              this.innerHTML = '<i class="fas fa-check" aria-hidden="true"></i> Copied!';
              this.classList.add('btn-success');
              this.classList.remove('btn-outline-secondary');
              
              // Announce to screen readers
              const announcement = document.createElement('div');
              announcement.setAttribute('aria-live', 'polite');
              announcement.setAttribute('aria-atomic', 'true');
              announcement.className = 'sr-only';
              announcement.textContent = 'Copied to clipboard';
              document.body.appendChild(announcement);
              
              setTimeout(() => {
                this.innerHTML = originalHTML;
                this.classList.remove('btn-success');
                this.classList.add('btn-outline-secondary');
                document.body.removeChild(announcement);
              }, 2000);
              
            } catch (err) {
              console.error('Copy failed:', err);
              
              // Fallback for older browsers
              try {
                target.select();
                document.execCommand('copy');
                
                const originalHTML = this.innerHTML;
                this.innerHTML = '<i class="fas fa-check" aria-hidden="true"></i> Copied!';
                setTimeout(() => {
                  this.innerHTML = originalHTML;
                }, 2000);
              } catch (fallbackErr) {
                console.error('Fallback copy failed:', fallbackErr);
              }
            }
          });
        });
      };

      initializeCopyButtons();

      // Auto-dismiss alerts with enhanced accessibility
      setTimeout(function() {
        const alerts = document.querySelectorAll('.alert:not(.alert-permanent)');
        alerts.forEach(alert => {
          if (bootstrap.Alert) {
            const bsAlert = new bootstrap.Alert(alert);
            bsAlert.close();
          }
        });
      }, 8000); // Increased to 8 seconds for better accessibility

      // Keyboard navigation enhancements
      document.addEventListener('keydown', function(e) {
        // ESC key closes modals and dropdowns
        if (e.key === 'Escape') {
          const openModals = document.querySelectorAll('.modal.show');
          openModals.forEach(modal => {
            const bsModal = bootstrap.Modal.getInstance(modal);
            if (bsModal) bsModal.hide();
          });
          
          const openDropdowns = document.querySelectorAll('.dropdown-menu.show');
          openDropdowns.forEach(dropdown => {
            const toggle = dropdown.previousElementSibling;
            if (toggle && toggle.classList.contains('dropdown-toggle')) {
              const bsDropdown = bootstrap.Dropdown.getInstance(toggle);
              if (bsDropdown) bsDropdown.hide();
            }
          });
        }
      });

      // Enhanced loading states
      const addLoadingState = (element) => {
        if (element) {
          element.classList.add('loading');
          element.disabled = true;
          const originalText = element.innerHTML;
          element.innerHTML = '<i class="fas fa-spinner fa-spin me-2" aria-hidden="true"></i>Loading...';
          element.setAttribute('aria-busy', 'true');
          
          return () => {
            element.classList.remove('loading');
            element.disabled = false;
            element.innerHTML = originalText;
            element.removeAttribute('aria-busy');
          };
        }
      };

      // Add loading states to form submissions
      const allForms = document.querySelectorAll('form');
      allForms.forEach(form => {
        form.addEventListener('submit', function() {
          const submitButton = form.querySelector('button[type="submit"]');
          if (submitButton && !submitButton.disabled) {
            addLoadingState(submitButton);
          }
        });
      });

    });

    // Global error handler for better UX
    window.addEventListener('error', function(e) {
      console.error('JavaScript error:', e.error);
      // Could implement user-friendly error reporting here
    });

    // Enhanced accessibility: announce dynamic content changes
    window.announceToScreenReader = function(message, priority = 'polite') {
      const announcement = document.createElement('div');
      announcement.setAttribute('aria-live', priority);
      announcement.setAttribute('aria-atomic', 'true');
      announcement.className = 'sr-only';
      announcement.textContent = message;
      document.body.appendChild(announcement);
      
      setTimeout(() => {
        if (document.body.contains(announcement)) {
          document.body.removeChild(announcement);
        }
      }, 3000);
    };
  </script>
</body>
</html> 